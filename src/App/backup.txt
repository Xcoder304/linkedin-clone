import { useState } from "react";
import { MdClose } from "react-icons/md";
import Avatar from "@mui/material/Avatar";
import { MdPhotoLibrary } from "react-icons/md";
import { AiFillYoutube } from "react-icons/ai";
import { useNavigate } from "react-router-dom";
import { useSelector, useDispatch } from "react-redux";
import { selectUser } from "../../Redux/features/userSlice";
import { db, storage } from "../../backend/firebase/config";
import { ref, getDownloadURL, uploadBytesResumable } from "firebase/storage";
import { collection, addDoc, serverTimestamp } from "firebase/firestore";

import "../../style/home/createpostmodal.css";

const CreatePostModal = () => {
  // for getting the user info
  const user = useSelector(selectUser);

  // for dispatching the funtion in redux store
  const dispatch = useDispatch();

  //open open or close the modals
  const [openSeleteImage, setSeleteImage] = useState(false);
  const [openSeleteVideo, setSeleteVideo] = useState(false);

  // for getting the user data
  let [userCaption, setuserCaption] = useState("");
  let [shareImage, setShareImage] = useState(null);

  // for navigating the user
  const navigate = useNavigate();

  const GetTheImage = (e) => {
    let image = e.target.files[0];
    if (image) {
      setShareImage(image);
    } else {
      alert(`sorry we cant upload ${image.type} format right now`);
    }
  };

  return (
    <div className="createpostmodal">
      <div
        className={`createpostmodal__card ${
          shareImage
            ? "active"
            : openSeleteImage
            ? "active"
            : openSeleteVideo
            ? "active"
            : ""
        }`}
      >
        <div className="createpostmodal__top">
          <h4>Create a post</h4>
          <span className="closeIcon" onClick={() => navigate(-1)}>
            <MdClose className="icon" />
          </span>
        </div>
        <div className="createpostmodal__body">
          <div className="body__userprofile">
            <Avatar alt={user?.displayName} src={user?.photoURL}></Avatar>
            <span>{user?.displayName}</span>
          </div>

          <div className="body__text">
            <textarea
              placeholder="What do you want to talk about?"
              onChange={(e) => setuserCaption(e.target.value)}
            ></textarea>
          </div>

          {/* seleted image or video */}

          {/* image */}
          {openSeleteImage && (
            <div className="seleteImage">
              <h5>Upload Image</h5>
              <input type="text" placeholder="Add The Image Url" />
              <h5>or</h5>

              <label htmlFor="image" className="selete__imageBtn">
                selete an image
              </label>
              {shareImage && (
                <div className="seleteimage__imagewapper">
                  <img src={URL.createObjectURL(shareImage)} />
                </div>
              )}
              {/* <h4 style={{ marginTop: "7px" }}>{image?.name}</h4> */}
              <input
                type="file"
                id="image"
                style={{ visibility: "hidden" }}
                accept="image/*"
                onChange={GetTheImage}
              />
            </div>
          )}

          {/* video */}
          {openSeleteVideo && (
            <>
              <div className="seleteImage">
                <h5>Upload video</h5>
                <input type="text" placeholder="Add The Video Url" />
                <h5>or</h5>
                <label htmlFor="video" className="selete__imageBtn">
                  selete an video
                </label>
                {/* <h4 style={{ marginTop: "7px" }}>{video?.name}</h4> */}
                <input
                  type="file"
                  id="video"
                  accept="video/*"
                  style={{ visibility: "hidden" }}
                />
              </div>
            </>
          )}
        </div>
        <div className="createpostmodal__footer">
          <div className="Mediabuttons">
            <span
              onClick={() => {
                setSeleteImage(!openSeleteImage);
                setSeleteVideo(false);
              }}
            >
              <MdPhotoLibrary className="icon" />
              <p>photo</p>
            </span>

            <span
              onClick={() => {
                setSeleteVideo(!openSeleteVideo);
                setSeleteImage(false);
              }}
            >
              <AiFillYoutube className="icon" />
              <p>video</p>
            </span>
          </div>
          <button className="createpostmodal__postBtn">post</button>
        </div>
      </div>
    </div>
  );
};

export default CreatePostModal;
